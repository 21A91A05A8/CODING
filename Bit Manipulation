Maximum Strong Pair XOR
------------------------------------------------------------------
n=int(input())
nums=list(map(int,input().split()))
ans=[0]
for i in range(len(nums)):
    for j in range(i+1,len(nums)):
        if abs(nums[i]-nums[j])<=min(nums[i],nums[j]):
            ans.append(nums[i]^nums[j])
print(max(ans))


Sum of Set Bits
--------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
int main(){
    int t;
    cin>>t;
    while(t--){
        int n,i,s=0;
        cin>>n;
        for(i=1;i<=n;i++){
            s+=__builtin_popcount(i);
        }
        cout<<s<<endl;
    }
}

bitwise xor of numbers inÂ range
------------------------------
#include<bits/stdc++.h>
using namespace std;
int main(){
    int n,s=0;
    cin>>n;
    for(int i=1;i<=n;i++){
        s^=i;
    }
    cout<<s;
}



count total set bits
-----------------------------
#include<bits/stdc++.h>
using namespace std;
int main(){
    int n,s=0;
    cin>>n;
    for(int i=1;i<=n;i++){
        s+=__builtin_popcount(i);
    }
    cout<<s;
}
